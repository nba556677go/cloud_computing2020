[{"/home/vincent/Documents/courses/cloud_computing2020/final/frontend/src/index.js":"1","/home/vincent/Documents/courses/cloud_computing2020/final/frontend/src/App.js":"2","/home/vincent/Documents/courses/cloud_computing2020/final/frontend/src/reportWebVitals.js":"3","/home/vincent/Documents/courses/cloud_computing2020/final/frontend/src/components/NavBar.js":"4","/home/vincent/Documents/courses/cloud_computing2020/final/frontend/src/components/MySelect.js":"5","/home/vincent/Documents/courses/cloud_computing2020/final/frontend/src/containers/MyButton.js":"6","/home/vincent/Documents/courses/cloud_computing2020/final/frontend/src/containers/Home.js":"7","/home/vincent/Documents/courses/cloud_computing2020/final/frontend/src/containers/Son.js":"8","/home/vincent/Documents/courses/cloud_computing2020/final/frontend/src/containers/MyDBSelect.js":"9","/home/vincent/Documents/courses/cloud_computing2020/final/frontend/src/containers/window-opener.js":"10","/home/vincent/Documents/courses/cloud_computing2020/final/frontend/src/components/MyChart.js":"11","/home/vincent/Documents/courses/cloud_computing2020/final/frontend/src/containers/maps/Mymap.js":"12","/home/vincent/Documents/courses/cloud_computing2020/final/frontend/src/containers/maps/InfoWindow.js":"13","/home/vincent/Documents/courses/cloud_computing2020/final/frontend/src/components/StationCards.js":"14","/home/vincent/Documents/courses/cloud_computing2020/final/frontend/src/containers/ChartButton.js":"15","/home/vincent/Documents/courses/cloud_computing2020/final/frontend/src/containers/MapButton.js":"16","/home/vincent/Documents/courses/cloud_computing2020/final/frontend/src/containers/Chart.js":"17","/home/vincent/Documents/courses/cloud_computing2020/final/frontend/src/containers/maps/MyDirectionMap.js":"18"},{"size":500,"mtime":1607581589871,"results":"19","hashOfConfig":"20"},{"size":1118,"mtime":1610597121153,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1607581589871,"results":"22","hashOfConfig":"20"},{"size":188,"mtime":1610484659541,"results":"23","hashOfConfig":"20"},{"size":202,"mtime":1607581589871,"results":"24","hashOfConfig":"20"},{"size":580,"mtime":1610007577557,"results":"25","hashOfConfig":"20"},{"size":1549,"mtime":1610690721772,"results":"26","hashOfConfig":"20"},{"size":1069,"mtime":1610008133822,"results":"27","hashOfConfig":"20"},{"size":2589,"mtime":1609403786987,"results":"28","hashOfConfig":"20"},{"size":3434,"mtime":1610012492696,"results":"29","hashOfConfig":"20"},{"size":2949,"mtime":1608215847885,"results":"30","hashOfConfig":"20"},{"size":10802,"mtime":1610627897243,"results":"31","hashOfConfig":"20"},{"size":2453,"mtime":1610477125637,"results":"32","hashOfConfig":"20"},{"size":825,"mtime":1610555404781,"results":"33","hashOfConfig":"20"},{"size":568,"mtime":1610608976763,"results":"34","hashOfConfig":"20"},{"size":543,"mtime":1610597004768,"results":"35","hashOfConfig":"20"},{"size":1282,"mtime":1610596722148,"results":"36","hashOfConfig":"20"},{"size":13163,"mtime":1610690634724,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"15lyujm",{"filePath":"41","messages":"42","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"40"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/vincent/Documents/courses/cloud_computing2020/final/frontend/src/index.js",[],["85","86"],"/home/vincent/Documents/courses/cloud_computing2020/final/frontend/src/App.js",["87","88","89","90","91","92"],"import logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport NavBar from './components/NavBar'\nimport MySelect from './components/MySelect'\nimport MyButton from './containers/MyButton'\nimport MyDBSelect from './containers/MyDBSelect'\nimport { Home } from \"./containers/Home\";\nimport { Son } from \"./containers/Son\";\nimport ChartButton from \"./containers/ChartButton\";\nimport MapButton from \"./containers/MapButton\";\nimport { Chart } from \"./containers/Chart\";\n\nlet myData = {\n  name: 'vincent',\n  gender: 'male'\n}\n\nfunction App() {\n  return (\n    <div>\n      {/*\n      <NavBar />\n      <MyButton data={myData} />\n      <MyDBSelect />\n      */}\n      <MapButton/> \n      <ChartButton/>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/son\" component={Son}/>\n          <Route exact path=\"/\" component={Home}/>\n          <Route exact path=\"/chart\" component={Chart}/>\n          <Redirect from=\"*\" to=\"/\" />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","/home/vincent/Documents/courses/cloud_computing2020/final/frontend/src/reportWebVitals.js",[],"/home/vincent/Documents/courses/cloud_computing2020/final/frontend/src/components/NavBar.js",["93"],"import React from 'react'\nimport '../styles/NavBar.css'\n\nexport default () => {\n    return (\n        <div className=\"navbar\">\n            <h1>Find YourBike!!</h1>\n        </div>\n    )   \n}","/home/vincent/Documents/courses/cloud_computing2020/final/frontend/src/components/MySelect.js",["94"],"import React from 'react'\n\nexport default () => {\n  return (\n    <div className='my-select'>\n      <select>\n        <option>Hello</option>\n        <option>World</option>\n      </select>\n    </div>\n  )\n}","/home/vincent/Documents/courses/cloud_computing2020/final/frontend/src/containers/MyButton.js",[],"/home/vincent/Documents/courses/cloud_computing2020/final/frontend/src/containers/Home.js",["95","96","97","98","99","100","101"],"/home/vincent/Documents/courses/cloud_computing2020/final/frontend/src/containers/Son.js",[],"/home/vincent/Documents/courses/cloud_computing2020/final/frontend/src/containers/MyDBSelect.js",["102"],"import React from 'react'\nimport axios from 'axios'\nimport MyChart, {MyDistrictChart} from '../components/MyChart'\n\n\nclass MyDBSelect extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { station: 'stationA', show: false, districtData: null,  refresh: true }\n    //set all stations\n    this.stations = null\n    \n    //make sure total station list loaded first before rendering the first time\n    axios({\n      method: 'get',\n      url: `http://140.112.28.115:8800/bikeapi/getallChID`\n    })\n    .then(response => this.stations = response.data.chineseID )\n    .then(() => {  this.setState({ refresh: true }) })//nees to call setstate to render page!!!\n  \n  }\n\n \n\n  // fetch data from our data base\n  handleSelect = (e) => {\n    axios({\n      method: 'get',\n      url: `http://140.112.28.115:8800/bikeapi/getdata?id=${e.target.value}`\n    })\n    .then(response => this.stationData = response.data )\n    .then(() => { console.log(this.stationData) })\n    .then(() => this.setState({ station: e.target.value, stationData : this.staionData}) )\n    .then(() => {\n      axios({\n        method: 'get',\n        url: `http://140.112.28.115:8800/bikeapi/getdistrict?district=${this.stationData.district}`\n      })\n      .then(response => this.state.districtData = response.data )\n      .then(() => { console.log(this.state.districtData) })\n      .then(() => this.setState({show: true }) )\n    })\n   /*\n    axios({\n      method: 'get',\n      url: `http://140.112.28.115:5000/getdistrict?district=${this.state.stationData.district}`\n    })\n    .then(response => this.districtData = response.data )\n    .then(() => { console.log(this.districtData) })\n    .then(() => this.setState({show: true }) )\n*/\n\n\n    \n  }\n\n\n\n  render() {\n    let display = null \n    let selectStations = null\n    \n    if (this.state.show) {\n      let props = {\n                    district: this.stationData.district,\n                    data : this.state.districtData\n                  }\n      display = (\n        <div>\n         \n          <MyChart info={this.stationData}/>\n          \n          <MyDistrictChart data={props}/>\n         \n        </div>\n      )\n    }\n\n    if (this.stations) {\n      selectStations = (\n        <select onChange={this.handleSelect}>\n          {this.stations.map(s => (\n            <option key={s} value={s}>{s}</option>\n          ))}\n        </select>  \n      )\n    }\n\n    return (\n      <div>\n        <h2>Please choose a Youbike station</h2>    \n        {selectStations}  \n          <div>{display}</div>\n          \n      </div>\n    )\n  }\n}\n\nexport default MyDBSelect","/home/vincent/Documents/courses/cloud_computing2020/final/frontend/src/containers/window-opener.js",[],"/home/vincent/Documents/courses/cloud_computing2020/final/frontend/src/components/MyChart.js",[],"/home/vincent/Documents/courses/cloud_computing2020/final/frontend/src/containers/maps/Mymap.js",["103","104","105","106","107","108","109"],"import React from 'react';\nimport { Map, GoogleApiWrapper, Marker, Circle } from 'google-maps-react';\nimport axios from 'axios';\nimport InfoWindow from './InfoWindow';\nimport { FaBeer, FaCalculator } from 'react-icons/fa';\nimport {\n  DirectionsRenderer\n} from \"react-google-maps\";\n\nimport StationCards from '../../components/StationCards'\nimport Card from 'react-bootstrap/Card'\nimport ListGroup from 'react-bootstrap/ListGroup'\n\n\n\nconst mapStyles = {\n  height: `1200px`, width: \"60vw\"\n};\n\nexport class MapContainer extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n\n      liveLat: null,\n      liveLng: null, \n      stations: [\n        {lat: 25.96233, lng: 112.80404},\n      ],\n\n      showDirection: false,\n      directionInstructions: null,\n      directions: null,\n\n      showNearStations: false,\n      near_cords: [],\n      \n      \n    }\n  }\n\n  //const getMarker = () =>{}\n  componentDidMount() {\n\n    const getMarkers = async () => {\n      //get live data\n      let res = await axios({\n        method: 'get',\n        url: `http://140.112.28.115:8800/bikeapi/getmapMarkers?latitude=${this.state.liveLat}&&longtitude=${this.state.liveLng}`\n      })\n      \n      //this.stations = res.data\n      console.log(\"latitude:\", this.state.liveLat, this.state.liveLng)\n      await this.parseMarkerLocations(res.data)\n      console.log(this.state.stations)\n      \n   \n    }\n    //get live location\n    if (\"geolocation\" in navigator) {\n      console.log(\"location data available\");\n\n      const success = async position => {\n        this.setState({liveLat: position.coords.latitude, liveLng: position.coords.longitude}, () => {getMarkers()})\n        //await getMarkers();\n      }\n      const error = () => {\n        console.log(\"get location error, returning to manual setting...\");\n        this.setState({liveLat: 25.021644799999997, liveLng: 121.5463424}, () => {getMarkers()})\n      }\n      navigator.geolocation.getCurrentPosition(success, error);\n      \n    } else {\n      console.log(\"Unable to retrieve your location\");\n      //using default location\n      this.setState({liveLat: 25.021644799999997, liveLng: 121.5463424})\n      console.log(\"Latitude manually set to :\", this.state.liveLat);\n      console.log(\"Longitude manually set to :\", this.state.liveLng);  \n    }\n\n     \n  }\n\n  parseMarkerLocations = async (data) => {\n    //store max distance of nearest 10 bikes\n    this.MaxDistance = data.MaxDistance\n    let cordinates = []\n    let near_cords = []\n    for(let i = 0 ; i < data.latitude.length ; i++){\n      let isempty = false\n      if(data.availBike[i] == 0 ){\n        isempty = true \n      }\n      //console.log({\"lat\" : data.latitude[i], \"lng\":data.longtitude[i]})\n      //x.push(info.info.availBike[i].time)\n      cordinates.push({\"lat\" : data.latitude[i], \"lng\":data.longtitude[i],\n                       \"stationID\" : data.stationID[i], \"stationName\": data.stationName[i],\n                       \"availBike\": data.availBike[i], \"totalBike\": data.totalBike[i],\n                       \"near\" : data.near[i].near, \"distance\": parseInt(data.near[i].distance), \"empty\": isempty\n                      });\n      if (data.near[i].near == 1){\n        near_cords.push({\"lat\" : data.latitude[i], \"lng\":data.longtitude[i],\n                         \"stationID\" : data.stationID[i], \"stationName\": data.stationName[i],\n                         \"availBike\": data.availBike[i], \"totalBike\": data.totalBike[i],\n                         \"near\" : data.near[i].near, \"distance\": parseInt(data.near[i].distance), \"empty\": isempty\n                        })\n      } \n      //console.log(data.near[i].distance)\n    }\n    \n    this.setState({stations: cordinates, showNearStations: true, near_cords: near_cords})\n  }\n  // map display helper functions\n  \n  showInfo = () => {\n    const content = this.state.selectedPlace.data.map((key, index) =>\n      <div key={index}>\n        <h3>Key Name: {key}</h3>\n      </div>\n    )\n    return content;\n  }\n\n  onMarkerClick = (props, marker) => {\n    console.log(props)\n    console.log(marker)\n    this.setState({\n      activeMarker: marker,\n      selectedPlace: props,\n      showingInfoWindow: true\n    });\n    console.log(props.data.lat);\n    this.startDirections(props.data.lat, props.data.lng);\n    //this.getDirections()\n  }\n\n  onInfoWindowClose = () =>\n    this.setState({\n      activeMarker: null,\n      showingInfoWindow: false\n    });\n\n  onMapClicked = () => {\n    if (this.state.showingInfoWindow)\n      this.setState({\n        activeMarker: null,\n        showingInfoWindow: false\n      });\n  };\n\n  //direction mapping \n  parseDirections = (data) => {\n    \n    console.log(data)\n    let display = { start_address : data.routes[0].legs[0].start_address,\n               destination :  data.routes[0].legs[0].end_address,\n               total_distance : data.routes[0].legs[0].distance.text,\n               total_duration : data.routes[0].legs[0].duration.text,\n               instructions : []\n              }\n\n      \n    //console.log(display)\n    data.routes[0].legs[0].steps.map((store, index) => {  \n        let tmp = document.createElement(\"DIV\");\n        tmp.innerHTML = store.instructions;\n        let stripped_text = tmp.textContent || tmp.innerText || \"\"\n        //console.log(tmp.textContent || tmp.innerText || \"\");\n        display.instructions.push(`Keep going for ${store.duration.text} (${store.distance.text}), then ${stripped_text}`);\n        //display.instructions.push(store.instructions)\n      }\n    )\n    \n    console.log(display)\n    console.log(data)\n    this.setState({showDirection: true, directionInstructions: display, directions: data})\n  \n\n\n  }\n\n  startDirections = (dstLat, dstLng) => {\n    const google = this.props.google;\n    const directionsService = new google.maps.DirectionsService();\n    \n    const origin = { lat: this.state.liveLat, lng:  this.state.liveLng};\n    const destination = { lat: dstLat, lng:  dstLng};\n    \n    directionsService.route(\n        {\n            origin: origin,\n            destination: destination,\n            travelMode: google.maps.TravelMode.WALKING\n        },\n        (result, status) => {\n            if (status === google.maps.DirectionsStatus.OK) {\n                console.log(result)\n                this.parseDirections(result);\n               \n            } else {\n                console.error(`error fetching directions ${result}`);\n            }\n        }\n    );\n  }\n  //directions helpers\n  getDirections = async (dstLat, dstLng) => {\n    \n    //get live data\n  \n    const res = await axios({\n    method: 'get',\n    url: `https://maps.googleapis.com/maps/api/directions/json?origin=${this.state.liveLat},${this.state.liveLng}&destination=${dstLat},${dstLng}&mode=walking&key=AIzaSyCu6EE4kF1ad_hh5pJUU_MW5qjteMLOTy0`\n    });\n    console.log(res);\n    this.parseDirections(res);\n  }\n\n//show functions\n  \n  showMarkers = () => {\n  \n    return this.state.stations.map((store, index) => {\n      \n      return <Marker icon={{ url: \"./icons/parking_lot_maps.png\", origin: {x: 0, y: 0}}} \n        key={index} id={index} position={{\n       lat: store.lat,\n       lng: store.lng\n     }}\n     onClick={this.onMarkerClick} name={store.stationName} data={store} availBike={store.availBike} distance={store.distance} lat={store.lat} lng={store.lng}  \n     label={{text: String(store.availBike), color: \"#F00\", fontFamily: \"Arial\"}} labelOrigin={(0,0)} \n      />\n    })\n  }\n  showDirectionRenderer = () => {\n    if (this.state.showDirection){\n      return <DirectionsRenderer\n              directions={this.state.directions}\n             />\n    }\n  }\n\n  render() {\n    //console.log(this.state.directions)\n\n    let directionDisplay = null;\n    if (this.state.showDirection){\n      /*\n      directionDisplay = (\n        <div id=\"footer\" class=\"direction_instruction\" style={{ width: '100%'}}>\n\n          <Card>\n            <ListGroup variant=\"flush\">\n            {this.state.directionInstructions.instructions.map((item, index) => {\n                    return <ListGroup.Item style={{textAlign: \"center\"}}>{item}</ListGroup.Item>;\n             })}\n            </ListGroup>\n          </Card>\n        </div>\n      );\n      */\n     directionDisplay = <StationCards data={this.state.directionInstructions.instructions} show={this.state.showDirection}/>;\n    }\n    //console.log(directions)\n    return (\n          <div style={{display: 'flex', flexDirection: \"row\", flexWrap: 'wrap', alignItems: 'stretch'}}>\n            <div style={mapStyles}>\n            <Map\n              google={this.props.google}\n              zoom={16}\n              style={mapStyles}\n              onClick={this.onMapClicked}\n              center={{ \n                lat: this.state.liveLat, \n                lng: this.state.liveLng\n            }}>\n             \n              \n              <Circle\n                radius={this.MaxDistance}\n                center={{ \n                  lat: this.state.liveLat, \n                  lng: this.state.liveLng\n                }}\n            \n                strokeColor='transparent'\n                strokeOpacity={0}\n                strokeWeight={5}\n                fillColor='#FFFF00'\n                fillOpacity={0.2}\n              />\n\n                {this.showMarkers()}\n                <Marker icon={\"./icons/library_maps.png\"} \n                  position={{\n                    lat: this.state.liveLat,\n                    lng: this.state.liveLng\n                  }}\n                  onClick={this.onMarkerClick} name=\"Current\" availBike={0} distance={0} lat={this.state.liveLat} lng={this.state.liveLng}\n                 \n                />\n                <InfoWindow\n                  marker={this.state.activeMarker}\n                  visible={this.state.showingInfoWindow}>\n                    <div>\n                      {/*{this.showInfo()}*/}\n                      <h3>{this.state.selectedPlace.name}</h3>\n                      \n                      <h5>Available bikes: {this.state.selectedPlace.availBike}</h5>\n                      <h5>Distance from you: {this.state.selectedPlace.distance}m</h5>\n                      <h6>cordinates:({this.state.selectedPlace.lat}, {this.state.selectedPlace.lng}) </h6>\n                      \n                      \n                    </div>\n                </InfoWindow>\n\n                {this.showDirectionRenderer()}\n            </Map>\n            </div>\n            \n            {/*<StationCards data={this.state.near_cords} show={this.state.showNearStations}/>*/}\n\n            {directionDisplay}\n           \n            \n        </div>\n        \n      \n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  //enter your api key here\n  apiKey: 'AIzaSyCu6EE4kF1ad_hh5pJUU_MW5qjteMLOTy0'\n})(MapContainer);\n\n\n","/home/vincent/Documents/courses/cloud_computing2020/final/frontend/src/containers/maps/InfoWindow.js",["110"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport ReactDOM from 'react-dom'\nimport ReactDOMServer from 'react-dom/server'\n\nexport class InfoWindow extends React.Component {\n\n  componentDidMount() {\n    this.renderInfoWindow();\n  }\n\n  componentDidUpdate(prevProps) {\n    const {google, map} = this.props;\n\n    if (!google || !map) {\n      return;\n    }\n\n    if (map !== prevProps.map) {\n      this.renderInfoWindow();\n    }\n\n    if (this.props.position !== prevProps.position) {\n      this.updatePosition();\n    }\n\n    if (this.props.children !== prevProps.children) {\n      this.updateContent();\n    }\n\n    if ((this.props.visible !== prevProps.visible ||\n        this.props.marker !== prevProps.marker ||\n        this.props.position !== prevProps.position)) {\n        this.props.visible ?\n          this.openWindow() :\n          this.closeWindow();\n    }\n  }\n\n  renderInfoWindow() {\n    const {\n      map,\n      google,\n      mapCenter,\n      ...props\n    } = this.props;\n\n    if (!google || !google.maps) {\n      return;\n    }\n\n    const iw = this.infowindow = new google.maps.InfoWindow({\n      content: '',\n      ...props\n    });\n\n    google.maps.event\n      .addListener(iw, 'closeclick', this.onClose.bind(this))\n    google.maps.event\n      .addListener(iw, 'domready', this.onOpen.bind(this));\n  }\n\n  onOpen() {\n    if (this.props.onOpen) {\n      this.props.onOpen();\n    }\n  }\n\n  onClose() {\n    if (this.props.onClose) {\n      this.props.onClose();\n    }\n  }\n\n  openWindow() {\n    this.infowindow.open(this.props.map, this.props.marker);\n  }\n\n  updatePosition() {\n    let pos = this.props.position;\n    //console.log(google.maps)\n    //if (!(pos instanceof google.maps.LatLng)) {\n    //  pos = pos && new google.maps.LatLng(pos.lat, pos.lng);\n    //}\n    this.infowindow.setPosition(pos);\n  }\n\n  updateContent() {\n    const content = this.renderChildren();\n    this.infowindow.setContent(content);\n  }\n\n  closeWindow() {\n    this.infowindow.close();\n  }\n\n  renderChildren() {\n    const {children} = this.props;\n    return ReactDOMServer.renderToString(children);\n  }\n\n  render() {\n    return null;\n  }\n}\n\nInfoWindow.propTypes = {\n  children: PropTypes.element.isRequired,\n  map: PropTypes.object,\n  marker: PropTypes.object,\n  position: PropTypes.object,\n  visible: PropTypes.bool,\n\n  // callbacks\n  onClose: PropTypes.func,\n  onOpen: PropTypes.func\n}\n\nInfoWindow.defaultProps = {\n  visible: false\n}\n\nexport default InfoWindow","/home/vincent/Documents/courses/cloud_computing2020/final/frontend/src/components/StationCards.js",["111"],"import React from 'react'\nimport '../styles/StationCards.css'\nimport Card from 'react-bootstrap/Card'\nimport ListGroup from 'react-bootstrap/ListGroup'\nexport default (data, show) => {\n    \n    console.log(data);\n    if (show){\n        let display = (\n            \n            <Card style={{ width: '100%', marginLeft: \".5vw\"}}>\n            <Card.Header> <h3>How to go?</h3></Card.Header>\n            <ListGroup variant=\"flush\">\n            {data.data.map((store, index) => (\n                <ListGroup.Item>\n                    <b>{store}</b>\n                 \n                </ListGroup.Item> \n            ))}\n            </ListGroup>\n            </Card>\n            \n        );\n\n        return(\n            <div className=\"StationCards\">\n                {display}\n            </div>\n        )\n           \n    \n    }\n   \n}","/home/vincent/Documents/courses/cloud_computing2020/final/frontend/src/containers/ChartButton.js",["112"],"import React from 'react'\nimport \"../styles/Button.css\"\nclass ChartButton extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  handleClick= () => {\n    /*if (this.state.myColor === 'white') {\n      this.setState({ myColor: 'black' })\n    } else {\n      this.setState({ myColor: 'white' })\n    }*/\n    window.location.replace(\"/chart\");\n  }\n\n  render() {\n    return (\n      \n        <div>\n          <button color=\"primary\" type='button' onClick={this.handleClick}>Go To Chart Site</button>\n        </div>\n    \n    )\n  }\n}\n\nexport default ChartButton","/home/vincent/Documents/courses/cloud_computing2020/final/frontend/src/containers/MapButton.js",["113"],"import React from 'react'\n\nclass MapButton extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  handleClick= () => {\n    /*if (this.state.myColor === 'white') {\n      this.setState({ myColor: 'black' })\n    } else {\n      this.setState({ myColor: 'white' })\n    }*/\n    window.location.replace(\"/\");\n  }\n\n  render() {\n    return (\n      <div className='map-button'>\n        <div>\n          <button type='button' onClick={this.handleClick}>Go To Map</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default MapButton","/home/vincent/Documents/courses/cloud_computing2020/final/frontend/src/containers/Chart.js",["114","115","116","117"],"import React from \"react\";\nimport { WindowOpener } from \"./window-opener\";\nimport NavBar from '../components/NavBar'\nimport MySelect from '../components/MySelect'\nimport MyButton from './MyButton'\nimport MyDBSelect from './MyDBSelect'\n\n\n\n\nexport class Chart extends React.Component {\n    constructor (props) {\n        super(props);\n\n        this.state = {\n            message: \"\", islogin : false, login_data: null\n        }\n        this.sonResponse = this.sonResponse.bind(this);\n    }\n\n\n    sonResponse (err, res) {\n        if (err) {\n            this.setState({ message: res })\n        }\n        this.setState({ message: res })\n        console.log(this.state.message)\n    }\n    \n    \n    \n    render () {\n        const {message} = this.state;\n        //const MapLoader = withScriptjs(Map);\n        //const MapLoader = withScriptjs(MapContainer);        \n        return (\n            <div>\n                <NavBar />\n                {/*\n                <WindowOpener\n                        url=\"http://140.112.28.115:5000\"\n                        bridge={this.sonResponse}\n                    >\n                        Login\n                </WindowOpener>*/}\n                <MyDBSelect />\n                \n\n               \n                \n            </div>\n        )\n    }\n}\n","/home/vincent/Documents/courses/cloud_computing2020/final/frontend/src/containers/maps/MyDirectionMap.js",["118","119","120","121","122","123","124","125","126","127","128","129","130","131","132"],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":1,"column":8,"nodeType":"139","messageId":"140","endLine":1,"endColumn":12},{"ruleId":"137","severity":1,"message":"141","line":5,"column":8,"nodeType":"139","messageId":"140","endLine":5,"endColumn":14},{"ruleId":"137","severity":1,"message":"142","line":6,"column":8,"nodeType":"139","messageId":"140","endLine":6,"endColumn":16},{"ruleId":"137","severity":1,"message":"143","line":7,"column":8,"nodeType":"139","messageId":"140","endLine":7,"endColumn":16},{"ruleId":"137","severity":1,"message":"144","line":8,"column":8,"nodeType":"139","messageId":"140","endLine":8,"endColumn":18},{"ruleId":"137","severity":1,"message":"145","line":15,"column":5,"nodeType":"139","messageId":"140","endLine":15,"endColumn":11},{"ruleId":"146","severity":1,"message":"147","line":4,"column":1,"nodeType":"148","endLine":10,"endColumn":2},{"ruleId":"146","severity":1,"message":"147","line":3,"column":1,"nodeType":"148","endLine":12,"endColumn":2},{"ruleId":"137","severity":1,"message":"149","line":2,"column":10,"nodeType":"139","messageId":"140","endLine":2,"endColumn":22},{"ruleId":"137","severity":1,"message":"150","line":3,"column":10,"nodeType":"139","messageId":"140","endLine":3,"endColumn":22},{"ruleId":"137","severity":1,"message":"142","line":5,"column":8,"nodeType":"139","messageId":"140","endLine":5,"endColumn":16},{"ruleId":"137","severity":1,"message":"143","line":6,"column":8,"nodeType":"139","messageId":"140","endLine":6,"endColumn":16},{"ruleId":"137","severity":1,"message":"144","line":7,"column":8,"nodeType":"139","messageId":"140","endLine":7,"endColumn":18},{"ruleId":"137","severity":1,"message":"151","line":10,"column":8,"nodeType":"139","messageId":"140","endLine":10,"endColumn":20},{"ruleId":"137","severity":1,"message":"152","line":34,"column":16,"nodeType":"139","messageId":"140","endLine":34,"endColumn":23},{"ruleId":"153","severity":1,"message":"154","line":39,"column":25,"nodeType":"155","endLine":39,"endColumn":35},{"ruleId":"137","severity":1,"message":"156","line":5,"column":10,"nodeType":"139","messageId":"140","endLine":5,"endColumn":16},{"ruleId":"137","severity":1,"message":"157","line":5,"column":18,"nodeType":"139","messageId":"140","endLine":5,"endColumn":30},{"ruleId":"137","severity":1,"message":"158","line":11,"column":8,"nodeType":"139","messageId":"140","endLine":11,"endColumn":12},{"ruleId":"137","severity":1,"message":"159","line":12,"column":8,"nodeType":"139","messageId":"140","endLine":12,"endColumn":17},{"ruleId":"160","severity":1,"message":"161","line":96,"column":28,"nodeType":"162","messageId":"163","endLine":96,"endColumn":30},{"ruleId":"160","severity":1,"message":"161","line":106,"column":29,"nodeType":"162","messageId":"163","endLine":106,"endColumn":31},{"ruleId":"164","severity":1,"message":"165","line":169,"column":53,"nodeType":"166","messageId":"167","endLine":169,"endColumn":55},{"ruleId":"137","severity":1,"message":"168","line":3,"column":8,"nodeType":"139","messageId":"140","endLine":3,"endColumn":16},{"ruleId":"146","severity":1,"message":"147","line":5,"column":1,"nodeType":"148","endLine":34,"endColumn":2},{"ruleId":"169","severity":1,"message":"170","line":4,"column":3,"nodeType":"171","messageId":"172","endLine":6,"endColumn":4},{"ruleId":"169","severity":1,"message":"170","line":4,"column":3,"nodeType":"171","messageId":"172","endLine":6,"endColumn":4},{"ruleId":"137","severity":1,"message":"150","line":2,"column":10,"nodeType":"139","messageId":"140","endLine":2,"endColumn":22},{"ruleId":"137","severity":1,"message":"142","line":4,"column":8,"nodeType":"139","messageId":"140","endLine":4,"endColumn":16},{"ruleId":"137","severity":1,"message":"143","line":5,"column":8,"nodeType":"139","messageId":"140","endLine":5,"endColumn":16},{"ruleId":"137","severity":1,"message":"152","line":33,"column":16,"nodeType":"139","messageId":"140","endLine":33,"endColumn":23},{"ruleId":"137","severity":1,"message":"156","line":3,"column":10,"nodeType":"139","messageId":"140","endLine":3,"endColumn":16},{"ruleId":"137","severity":1,"message":"173","line":12,"column":5,"nodeType":"139","messageId":"140","endLine":12,"endColumn":15},{"ruleId":"137","severity":1,"message":"174","line":15,"column":9,"nodeType":"139","messageId":"140","endLine":15,"endColumn":16},{"ruleId":"137","severity":1,"message":"175","line":16,"column":18,"nodeType":"139","messageId":"140","endLine":16,"endColumn":27},{"ruleId":"137","severity":1,"message":"176","line":21,"column":16,"nodeType":"139","messageId":"140","endLine":21,"endColumn":26},{"ruleId":"177","severity":1,"message":"178","line":30,"column":18,"nodeType":"179","messageId":"180","endLine":30,"endColumn":19},{"ruleId":"160","severity":1,"message":"161","line":40,"column":26,"nodeType":"162","messageId":"163","endLine":40,"endColumn":28},{"ruleId":"160","severity":1,"message":"161","line":50,"column":27,"nodeType":"162","messageId":"163","endLine":50,"endColumn":29},{"ruleId":"177","severity":1,"message":"178","line":59,"column":20,"nodeType":"179","messageId":"180","endLine":59,"endColumn":21},{"ruleId":"137","severity":1,"message":"181","line":64,"column":10,"nodeType":"139","messageId":"140","endLine":64,"endColumn":21},{"ruleId":"137","severity":1,"message":"182","line":83,"column":7,"nodeType":"139","messageId":"140","endLine":83,"endColumn":16},{"ruleId":"164","severity":1,"message":"165","line":175,"column":55,"nodeType":"166","messageId":"167","endLine":175,"endColumn":57},{"ruleId":"160","severity":1,"message":"161","line":257,"column":32,"nodeType":"162","messageId":"163","endLine":257,"endColumn":34},{"ruleId":"160","severity":1,"message":"161","line":267,"column":33,"nodeType":"162","messageId":"163","endLine":267,"endColumn":35},{"ruleId":"137","severity":1,"message":"183","line":343,"column":21,"nodeType":"139","messageId":"140","endLine":343,"endColumn":45},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'NavBar' is defined but never used.","'MySelect' is defined but never used.","'MyButton' is defined but never used.","'MyDBSelect' is defined but never used.","'myData' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'withScriptjs' is defined but never used.","'WindowOpener' is defined but never used.","'MapContainer' is defined but never used.","'message' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'FaBeer' is defined but never used.","'FaCalculator' is defined but never used.","'Card' is defined but never used.","'ListGroup' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'ReactDOM' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'InfoWindow' is defined but never used.","'InfoBox' is assigned a value but never used.","'withProps' is assigned a value but never used.","'getMarkers' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'showMarkers' is defined but never used.","'CreateMap' is assigned a value but never used.","'MapWithAMakredInfoWindow' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]